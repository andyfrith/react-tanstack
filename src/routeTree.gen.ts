/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UsersRouteImport } from './routes/users'
import { Route as PaymentsRouteImport } from './routes/payments'
import { Route as ExampleRouteImport } from './routes/example'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentsRoute = PaymentsRouteImport.update({
  id: '/payments',
  path: '/payments',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleRoute = ExampleRouteImport.update({
  id: '/example',
  path: '/example',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/example': typeof ExampleRoute
  '/payments': typeof PaymentsRoute
  '/users': typeof UsersRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/example': typeof ExampleRoute
  '/payments': typeof PaymentsRoute
  '/users': typeof UsersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/example': typeof ExampleRoute
  '/payments': typeof PaymentsRoute
  '/users': typeof UsersRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/example' | '/payments' | '/users'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/example' | '/payments' | '/users'
  id: '__root__' | '/' | '/about' | '/example' | '/payments' | '/users'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ExampleRoute: typeof ExampleRoute
  PaymentsRoute: typeof PaymentsRoute
  UsersRoute: typeof UsersRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payments': {
      id: '/payments'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof PaymentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example': {
      id: '/example'
      path: '/example'
      fullPath: '/example'
      preLoaderRoute: typeof ExampleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ExampleRoute: ExampleRoute,
  PaymentsRoute: PaymentsRoute,
  UsersRoute: UsersRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
